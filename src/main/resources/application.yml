server:
  servlet:
    context-path: /booking-service
  port: ${PORT}

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    max-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    database-platform: org.hibernate.dialect.MariaDBDialect
    show-sql: true

  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false

security:
  firebase-props:
    database-url: ${FIREBASE_DATABASE}
    enable-strict-server-session: false
    enable-check-session-revoked: false
    enable-logout-everywhere: false
    session-expiry-in-days: 5
  cookie-props:
    max-age-in-minutes: 7200
    http-only: true
    secure: true
    domain: ${CORS_DOMAIN}
    path: /
  allow-credentials: true
  allowed-origins:
    - https://${CORS_DOMAIN}
    - http://localhost:3000
  allowed-methods:
    - GET
    - POST
    - PUT
    - PATCH
    - DELETE
    - OPTIONS
  allowed-headers:
    - Authorization
    - Origin
    - Content-Type
    - Accept
    - Accept-Encoding
    - Accept-Language
    - Access-Control-Allow-Origin
    - Access-Control-Allow-Headers
    - Access-Control-Request-Method
    - X-Requested-With
    - X-Auth-Token
    - X-Xsrf-Token
    - Cache-Control
    - Id-Token
  allowed-public-apis:
    - /favicon.ico
    - /session/login
    - /public/*
    - /test/**
  exposed-headers:
    - X-Xsrf-Token
  valid-application-roles:
    - ROLE_SUPER
    - ROLE_ADMIN
    - ROLE_SELLER
    - ROLE_CUSTOMER
  super-admins: ${SUPER_ADMINS}
  test:
    login:
      enabled: ${TEST_LOGIN_ENABLED}

aws:
  accessKey: ${AWS_ACCESS}
  secretKey: ${AWS_SECRET}
